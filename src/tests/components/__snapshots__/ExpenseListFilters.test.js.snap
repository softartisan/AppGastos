// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render ExpenseListFilters correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpenseListFilters
    filters={
      Object {
        "endDate": undefined,
        "sortBy": "date",
        "startDate": undefined,
        "text": "",
      }
    }
    setEndDate={[MockFunction]}
    setStartDate={[MockFunction]}
    setTextFilter={[MockFunction]}
    sortByAmount={[MockFunction]}
    sortByDate={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="input-group"
      >
        <div
          className="input-group__item"
        >
          <input
            className="text-input"
            onChange={[Function]}
            placeholder="Buscar gastos"
            type="text"
            value=""
          />
        </div>
        <div
          className="input-group__item"
        >
          <select
            className="select"
            onChange={[Function]}
            value="date"
          >
            <option
              value="date"
            >
              Fecha
            </option>
            <option
              value="amount"
            >
              Monto
            </option>
          </select>
        </div>
        <div
          className="input-group__item"
        >
          <DateRangePicker
            anchorDirection="left"
            customArrowIcon={null}
            customCloseIcon={null}
            customInputIcon={null}
            daySize={39}
            disabled={false}
            displayFormat={[Function]}
            enableOutsideDays={false}
            endDate={null}
            endDateId="endDate"
            endDatePlaceholderText="End Date"
            firstDayOfWeek={null}
            focusedInput={null}
            hideKeyboardShortcutsPanel={false}
            horizontalMargin={0}
            initialVisibleMonth={null}
            isDayBlocked={[Function]}
            isDayHighlighted={[Function]}
            isOutsideRange={[Function]}
            isRTL={false}
            keepOpenOnDateSelect={false}
            minimumNights={1}
            monthFormat="MMMM YYYY"
            navNext={null}
            navPrev={null}
            numberOfMonths={1}
            onClose={[Function]}
            onDatesChange={[Function]}
            onFocusChange={[Function]}
            onNextMonthClick={[Function]}
            onPrevMonthClick={[Function]}
            orientation="horizontal"
            phrases={
              Object {
                "chooseAvailableEndDate": [Function],
                "chooseAvailableStartDate": [Function],
                "clearDates": "Clear Dates",
                "closeDatePicker": "Close",
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month",
                "jumpToPrevMonth": "Move backward to switch to the previous month",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                "moveFocusByOneMonth": "Switch months",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                "openThisPanel": "Open this panel",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field",
                "selectFocusedDate": "Select the date in focus",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                "upArrowDownArrow": "up and down arrow keys",
              }
            }
            readOnly={false}
            renderCalendarInfo={null}
            renderDay={null}
            renderMonth={null}
            reopenPickerOnClearDates={false}
            required={false}
            screenReaderInputMessage=""
            showClearDates={true}
            showDefaultInputIcon={false}
            startDate={null}
            startDateId="startDate"
            startDatePlaceholderText="Start Date"
            withFullScreenPortal={false}
            withPortal={false}
          />
        </div>
      </div>,
      "className": "content-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="input-group__item"
          >
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value=""
            />
          </div>,
          <div
            className="input-group__item"
          >
            <select
              className="select"
              onChange={[Function]}
              value="date"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>
          </div>,
          <div
            className="input-group__item"
          >
            <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={null}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={null}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>,
        ],
        "className": "input-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value=""
            />,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "text-input",
              "onChange": [Function],
              "placeholder": "Buscar gastos",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              className="select"
              onChange={[Function]}
              value="date"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="date"
                >
                  Fecha
                </option>,
                <option
                  value="amount"
                >
                  Monto
                </option>,
              ],
              "className": "select",
              "onChange": [Function],
              "value": "date",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Fecha",
                  "value": "date",
                },
                "ref": null,
                "rendered": "Fecha",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Monto",
                  "value": "amount",
                },
                "ref": null,
                "rendered": "Monto",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={null}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={null}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "anchorDirection": "left",
              "customArrowIcon": null,
              "customCloseIcon": null,
              "customInputIcon": null,
              "daySize": 39,
              "disabled": false,
              "displayFormat": [Function],
              "enableOutsideDays": false,
              "endDate": null,
              "endDateId": "endDate",
              "endDatePlaceholderText": "End Date",
              "firstDayOfWeek": null,
              "focusedInput": null,
              "hideKeyboardShortcutsPanel": false,
              "horizontalMargin": 0,
              "initialVisibleMonth": null,
              "isDayBlocked": [Function],
              "isDayHighlighted": [Function],
              "isOutsideRange": [Function],
              "isRTL": false,
              "keepOpenOnDateSelect": false,
              "minimumNights": 1,
              "monthFormat": "MMMM YYYY",
              "navNext": null,
              "navPrev": null,
              "numberOfMonths": 1,
              "onClose": [Function],
              "onDatesChange": [Function],
              "onFocusChange": [Function],
              "onNextMonthClick": [Function],
              "onPrevMonthClick": [Function],
              "orientation": "horizontal",
              "phrases": Object {
                "chooseAvailableEndDate": [Function],
                "chooseAvailableStartDate": [Function],
                "clearDates": "Clear Dates",
                "closeDatePicker": "Close",
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month",
                "jumpToPrevMonth": "Move backward to switch to the previous month",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                "moveFocusByOneMonth": "Switch months",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                "openThisPanel": "Open this panel",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field",
                "selectFocusedDate": "Select the date in focus",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                "upArrowDownArrow": "up and down arrow keys",
              },
              "readOnly": false,
              "renderCalendarInfo": null,
              "renderDay": null,
              "renderMonth": null,
              "reopenPickerOnClearDates": false,
              "required": false,
              "screenReaderInputMessage": "",
              "showClearDates": true,
              "showDefaultInputIcon": false,
              "startDate": null,
              "startDateId": "startDate",
              "startDatePlaceholderText": "Start Date",
              "withFullScreenPortal": false,
              "withPortal": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="input-group"
        >
          <div
            className="input-group__item"
          >
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value=""
            />
          </div>
          <div
            className="input-group__item"
          >
            <select
              className="select"
              onChange={[Function]}
              value="date"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>
          </div>
          <div
            className="input-group__item"
          >
            <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={null}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={null}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>
        </div>,
        "className": "content-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-group__item"
            >
              <input
                className="text-input"
                onChange={[Function]}
                placeholder="Buscar gastos"
                type="text"
                value=""
              />
            </div>,
            <div
              className="input-group__item"
            >
              <select
                className="select"
                onChange={[Function]}
                value="date"
              >
                <option
                  value="date"
                >
                  Fecha
                </option>
                <option
                  value="amount"
                >
                  Monto
                </option>
              </select>
            </div>,
            <div
              className="input-group__item"
            >
              <DateRangePicker
                anchorDirection="left"
                customArrowIcon={null}
                customCloseIcon={null}
                customInputIcon={null}
                daySize={39}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                endDate={null}
                endDateId="endDate"
                endDatePlaceholderText="End Date"
                firstDayOfWeek={null}
                focusedInput={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                initialVisibleMonth={null}
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepOpenOnDateSelect={false}
                minimumNights={1}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                numberOfMonths={1}
                onClose={[Function]}
                onDatesChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                orientation="horizontal"
                phrases={
                  Object {
                    "chooseAvailableEndDate": [Function],
                    "chooseAvailableStartDate": [Function],
                    "clearDates": "Clear Dates",
                    "closeDatePicker": "Close",
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month",
                    "jumpToPrevMonth": "Move backward to switch to the previous month",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                    "moveFocusByOneMonth": "Switch months",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                    "openThisPanel": "Open this panel",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field",
                    "selectFocusedDate": "Select the date in focus",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                readOnly={false}
                renderCalendarInfo={null}
                renderDay={null}
                renderMonth={null}
                reopenPickerOnClearDates={false}
                required={false}
                screenReaderInputMessage=""
                showClearDates={true}
                showDefaultInputIcon={false}
                startDate={null}
                startDateId="startDate"
                startDatePlaceholderText="Start Date"
                withFullScreenPortal={false}
                withPortal={false}
              />
            </div>,
          ],
          "className": "input-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="text-input"
                onChange={[Function]}
                placeholder="Buscar gastos"
                type="text"
                value=""
              />,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "text-input",
                "onChange": [Function],
                "placeholder": "Buscar gastos",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="select"
                onChange={[Function]}
                value="date"
              >
                <option
                  value="date"
                >
                  Fecha
                </option>
                <option
                  value="amount"
                >
                  Monto
                </option>
              </select>,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="date"
                  >
                    Fecha
                  </option>,
                  <option
                    value="amount"
                  >
                    Monto
                  </option>,
                ],
                "className": "select",
                "onChange": [Function],
                "value": "date",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fecha",
                    "value": "date",
                  },
                  "ref": null,
                  "rendered": "Fecha",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Monto",
                    "value": "amount",
                  },
                  "ref": null,
                  "rendered": "Monto",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <DateRangePicker
                anchorDirection="left"
                customArrowIcon={null}
                customCloseIcon={null}
                customInputIcon={null}
                daySize={39}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                endDate={null}
                endDateId="endDate"
                endDatePlaceholderText="End Date"
                firstDayOfWeek={null}
                focusedInput={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                initialVisibleMonth={null}
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepOpenOnDateSelect={false}
                minimumNights={1}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                numberOfMonths={1}
                onClose={[Function]}
                onDatesChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                orientation="horizontal"
                phrases={
                  Object {
                    "chooseAvailableEndDate": [Function],
                    "chooseAvailableStartDate": [Function],
                    "clearDates": "Clear Dates",
                    "closeDatePicker": "Close",
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month",
                    "jumpToPrevMonth": "Move backward to switch to the previous month",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                    "moveFocusByOneMonth": "Switch months",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                    "openThisPanel": "Open this panel",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field",
                    "selectFocusedDate": "Select the date in focus",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                readOnly={false}
                renderCalendarInfo={null}
                renderDay={null}
                renderMonth={null}
                reopenPickerOnClearDates={false}
                required={false}
                screenReaderInputMessage=""
                showClearDates={true}
                showDefaultInputIcon={false}
                startDate={null}
                startDateId="startDate"
                startDatePlaceholderText="Start Date"
                withFullScreenPortal={false}
                withPortal={false}
              />,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorDirection": "left",
                "customArrowIcon": null,
                "customCloseIcon": null,
                "customInputIcon": null,
                "daySize": 39,
                "disabled": false,
                "displayFormat": [Function],
                "enableOutsideDays": false,
                "endDate": null,
                "endDateId": "endDate",
                "endDatePlaceholderText": "End Date",
                "firstDayOfWeek": null,
                "focusedInput": null,
                "hideKeyboardShortcutsPanel": false,
                "horizontalMargin": 0,
                "initialVisibleMonth": null,
                "isDayBlocked": [Function],
                "isDayHighlighted": [Function],
                "isOutsideRange": [Function],
                "isRTL": false,
                "keepOpenOnDateSelect": false,
                "minimumNights": 1,
                "monthFormat": "MMMM YYYY",
                "navNext": null,
                "navPrev": null,
                "numberOfMonths": 1,
                "onClose": [Function],
                "onDatesChange": [Function],
                "onFocusChange": [Function],
                "onNextMonthClick": [Function],
                "onPrevMonthClick": [Function],
                "orientation": "horizontal",
                "phrases": Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                },
                "readOnly": false,
                "renderCalendarInfo": null,
                "renderDay": null,
                "renderMonth": null,
                "reopenPickerOnClearDates": false,
                "required": false,
                "screenReaderInputMessage": "",
                "showClearDates": true,
                "showDefaultInputIcon": false,
                "startDate": null,
                "startDateId": "startDate",
                "startDatePlaceholderText": "Start Date",
                "withFullScreenPortal": false,
                "withPortal": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Should render ExpenseListFilters with alt data correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpenseListFilters
    filters={
      Object {
        "endDate": "1970-01-04T00:00:00.000Z",
        "sortBy": "amount",
        "startDate": "1970-01-01T00:00:00.000Z",
        "text": "bills",
      }
    }
    setEndDate={[MockFunction]}
    setStartDate={[MockFunction]}
    setTextFilter={[MockFunction]}
    sortByAmount={[MockFunction]}
    sortByDate={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="input-group"
      >
        <div
          className="input-group__item"
        >
          <input
            className="text-input"
            onChange={[Function]}
            placeholder="Buscar gastos"
            type="text"
            value="bills"
          />
        </div>
        <div
          className="input-group__item"
        >
          <select
            className="select"
            onChange={[Function]}
            value="amount"
          >
            <option
              value="date"
            >
              Fecha
            </option>
            <option
              value="amount"
            >
              Monto
            </option>
          </select>
        </div>
        <div
          className="input-group__item"
        >
          <DateRangePicker
            anchorDirection="left"
            customArrowIcon={null}
            customCloseIcon={null}
            customInputIcon={null}
            daySize={39}
            disabled={false}
            displayFormat={[Function]}
            enableOutsideDays={false}
            endDate={"1970-01-04T00:00:00.000Z"}
            endDateId="endDate"
            endDatePlaceholderText="End Date"
            firstDayOfWeek={null}
            focusedInput={null}
            hideKeyboardShortcutsPanel={false}
            horizontalMargin={0}
            initialVisibleMonth={null}
            isDayBlocked={[Function]}
            isDayHighlighted={[Function]}
            isOutsideRange={[Function]}
            isRTL={false}
            keepOpenOnDateSelect={false}
            minimumNights={1}
            monthFormat="MMMM YYYY"
            navNext={null}
            navPrev={null}
            numberOfMonths={1}
            onClose={[Function]}
            onDatesChange={[Function]}
            onFocusChange={[Function]}
            onNextMonthClick={[Function]}
            onPrevMonthClick={[Function]}
            orientation="horizontal"
            phrases={
              Object {
                "chooseAvailableEndDate": [Function],
                "chooseAvailableStartDate": [Function],
                "clearDates": "Clear Dates",
                "closeDatePicker": "Close",
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month",
                "jumpToPrevMonth": "Move backward to switch to the previous month",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                "moveFocusByOneMonth": "Switch months",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                "openThisPanel": "Open this panel",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field",
                "selectFocusedDate": "Select the date in focus",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                "upArrowDownArrow": "up and down arrow keys",
              }
            }
            readOnly={false}
            renderCalendarInfo={null}
            renderDay={null}
            renderMonth={null}
            reopenPickerOnClearDates={false}
            required={false}
            screenReaderInputMessage=""
            showClearDates={true}
            showDefaultInputIcon={false}
            startDate={"1970-01-01T00:00:00.000Z"}
            startDateId="startDate"
            startDatePlaceholderText="Start Date"
            withFullScreenPortal={false}
            withPortal={false}
          />
        </div>
      </div>,
      "className": "content-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="input-group__item"
          >
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value="bills"
            />
          </div>,
          <div
            className="input-group__item"
          >
            <select
              className="select"
              onChange={[Function]}
              value="amount"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>
          </div>,
          <div
            className="input-group__item"
          >
            <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={"1970-01-04T00:00:00.000Z"}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={"1970-01-01T00:00:00.000Z"}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>,
        ],
        "className": "input-group",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value="bills"
            />,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "text-input",
              "onChange": [Function],
              "placeholder": "Buscar gastos",
              "type": "text",
              "value": "bills",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              className="select"
              onChange={[Function]}
              value="amount"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option
                  value="date"
                >
                  Fecha
                </option>,
                <option
                  value="amount"
                >
                  Monto
                </option>,
              ],
              "className": "select",
              "onChange": [Function],
              "value": "amount",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Fecha",
                  "value": "date",
                },
                "ref": null,
                "rendered": "Fecha",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Monto",
                  "value": "amount",
                },
                "ref": null,
                "rendered": "Monto",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={"1970-01-04T00:00:00.000Z"}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={"1970-01-01T00:00:00.000Z"}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />,
            "className": "input-group__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "anchorDirection": "left",
              "customArrowIcon": null,
              "customCloseIcon": null,
              "customInputIcon": null,
              "daySize": 39,
              "disabled": false,
              "displayFormat": [Function],
              "enableOutsideDays": false,
              "endDate": "1970-01-04T00:00:00.000Z",
              "endDateId": "endDate",
              "endDatePlaceholderText": "End Date",
              "firstDayOfWeek": null,
              "focusedInput": null,
              "hideKeyboardShortcutsPanel": false,
              "horizontalMargin": 0,
              "initialVisibleMonth": null,
              "isDayBlocked": [Function],
              "isDayHighlighted": [Function],
              "isOutsideRange": [Function],
              "isRTL": false,
              "keepOpenOnDateSelect": false,
              "minimumNights": 1,
              "monthFormat": "MMMM YYYY",
              "navNext": null,
              "navPrev": null,
              "numberOfMonths": 1,
              "onClose": [Function],
              "onDatesChange": [Function],
              "onFocusChange": [Function],
              "onNextMonthClick": [Function],
              "onPrevMonthClick": [Function],
              "orientation": "horizontal",
              "phrases": Object {
                "chooseAvailableEndDate": [Function],
                "chooseAvailableStartDate": [Function],
                "clearDates": "Clear Dates",
                "closeDatePicker": "Close",
                "dateIsUnavailable": [Function],
                "enterKey": "Enter key",
                "escape": "Escape key",
                "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                "homeEnd": "Home and end keys",
                "jumpToNextMonth": "Move forward to switch to the next month",
                "jumpToPrevMonth": "Move backward to switch to the previous month",
                "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                "keyboardShortcuts": "Keyboard Shortcuts",
                "leftArrowRightArrow": "Right and left arrow keys",
                "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                "moveFocusByOneMonth": "Switch months",
                "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                "openThisPanel": "Open this panel",
                "pageUpPageDown": "page up and page down keys",
                "questionMark": "Question mark",
                "returnFocusToInput": "Return to the date input field",
                "selectFocusedDate": "Select the date in focus",
                "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                "upArrowDownArrow": "up and down arrow keys",
              },
              "readOnly": false,
              "renderCalendarInfo": null,
              "renderDay": null,
              "renderMonth": null,
              "reopenPickerOnClearDates": false,
              "required": false,
              "screenReaderInputMessage": "",
              "showClearDates": true,
              "showDefaultInputIcon": false,
              "startDate": "1970-01-01T00:00:00.000Z",
              "startDateId": "startDate",
              "startDatePlaceholderText": "Start Date",
              "withFullScreenPortal": false,
              "withPortal": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="input-group"
        >
          <div
            className="input-group__item"
          >
            <input
              className="text-input"
              onChange={[Function]}
              placeholder="Buscar gastos"
              type="text"
              value="bills"
            />
          </div>
          <div
            className="input-group__item"
          >
            <select
              className="select"
              onChange={[Function]}
              value="amount"
            >
              <option
                value="date"
              >
                Fecha
              </option>
              <option
                value="amount"
              >
                Monto
              </option>
            </select>
          </div>
          <div
            className="input-group__item"
          >
            <DateRangePicker
              anchorDirection="left"
              customArrowIcon={null}
              customCloseIcon={null}
              customInputIcon={null}
              daySize={39}
              disabled={false}
              displayFormat={[Function]}
              enableOutsideDays={false}
              endDate={"1970-01-04T00:00:00.000Z"}
              endDateId="endDate"
              endDatePlaceholderText="End Date"
              firstDayOfWeek={null}
              focusedInput={null}
              hideKeyboardShortcutsPanel={false}
              horizontalMargin={0}
              initialVisibleMonth={null}
              isDayBlocked={[Function]}
              isDayHighlighted={[Function]}
              isOutsideRange={[Function]}
              isRTL={false}
              keepOpenOnDateSelect={false}
              minimumNights={1}
              monthFormat="MMMM YYYY"
              navNext={null}
              navPrev={null}
              numberOfMonths={1}
              onClose={[Function]}
              onDatesChange={[Function]}
              onFocusChange={[Function]}
              onNextMonthClick={[Function]}
              onPrevMonthClick={[Function]}
              orientation="horizontal"
              phrases={
                Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                }
              }
              readOnly={false}
              renderCalendarInfo={null}
              renderDay={null}
              renderMonth={null}
              reopenPickerOnClearDates={false}
              required={false}
              screenReaderInputMessage=""
              showClearDates={true}
              showDefaultInputIcon={false}
              startDate={"1970-01-01T00:00:00.000Z"}
              startDateId="startDate"
              startDatePlaceholderText="Start Date"
              withFullScreenPortal={false}
              withPortal={false}
            />
          </div>
        </div>,
        "className": "content-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="input-group__item"
            >
              <input
                className="text-input"
                onChange={[Function]}
                placeholder="Buscar gastos"
                type="text"
                value="bills"
              />
            </div>,
            <div
              className="input-group__item"
            >
              <select
                className="select"
                onChange={[Function]}
                value="amount"
              >
                <option
                  value="date"
                >
                  Fecha
                </option>
                <option
                  value="amount"
                >
                  Monto
                </option>
              </select>
            </div>,
            <div
              className="input-group__item"
            >
              <DateRangePicker
                anchorDirection="left"
                customArrowIcon={null}
                customCloseIcon={null}
                customInputIcon={null}
                daySize={39}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                endDate={"1970-01-04T00:00:00.000Z"}
                endDateId="endDate"
                endDatePlaceholderText="End Date"
                firstDayOfWeek={null}
                focusedInput={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                initialVisibleMonth={null}
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepOpenOnDateSelect={false}
                minimumNights={1}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                numberOfMonths={1}
                onClose={[Function]}
                onDatesChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                orientation="horizontal"
                phrases={
                  Object {
                    "chooseAvailableEndDate": [Function],
                    "chooseAvailableStartDate": [Function],
                    "clearDates": "Clear Dates",
                    "closeDatePicker": "Close",
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month",
                    "jumpToPrevMonth": "Move backward to switch to the previous month",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                    "moveFocusByOneMonth": "Switch months",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                    "openThisPanel": "Open this panel",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field",
                    "selectFocusedDate": "Select the date in focus",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                readOnly={false}
                renderCalendarInfo={null}
                renderDay={null}
                renderMonth={null}
                reopenPickerOnClearDates={false}
                required={false}
                screenReaderInputMessage=""
                showClearDates={true}
                showDefaultInputIcon={false}
                startDate={"1970-01-01T00:00:00.000Z"}
                startDateId="startDate"
                startDatePlaceholderText="Start Date"
                withFullScreenPortal={false}
                withPortal={false}
              />
            </div>,
          ],
          "className": "input-group",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="text-input"
                onChange={[Function]}
                placeholder="Buscar gastos"
                type="text"
                value="bills"
              />,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "text-input",
                "onChange": [Function],
                "placeholder": "Buscar gastos",
                "type": "text",
                "value": "bills",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="select"
                onChange={[Function]}
                value="amount"
              >
                <option
                  value="date"
                >
                  Fecha
                </option>
                <option
                  value="amount"
                >
                  Monto
                </option>
              </select>,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="date"
                  >
                    Fecha
                  </option>,
                  <option
                    value="amount"
                  >
                    Monto
                  </option>,
                ],
                "className": "select",
                "onChange": [Function],
                "value": "amount",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Fecha",
                    "value": "date",
                  },
                  "ref": null,
                  "rendered": "Fecha",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Monto",
                    "value": "amount",
                  },
                  "ref": null,
                  "rendered": "Monto",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <DateRangePicker
                anchorDirection="left"
                customArrowIcon={null}
                customCloseIcon={null}
                customInputIcon={null}
                daySize={39}
                disabled={false}
                displayFormat={[Function]}
                enableOutsideDays={false}
                endDate={"1970-01-04T00:00:00.000Z"}
                endDateId="endDate"
                endDatePlaceholderText="End Date"
                firstDayOfWeek={null}
                focusedInput={null}
                hideKeyboardShortcutsPanel={false}
                horizontalMargin={0}
                initialVisibleMonth={null}
                isDayBlocked={[Function]}
                isDayHighlighted={[Function]}
                isOutsideRange={[Function]}
                isRTL={false}
                keepOpenOnDateSelect={false}
                minimumNights={1}
                monthFormat="MMMM YYYY"
                navNext={null}
                navPrev={null}
                numberOfMonths={1}
                onClose={[Function]}
                onDatesChange={[Function]}
                onFocusChange={[Function]}
                onNextMonthClick={[Function]}
                onPrevMonthClick={[Function]}
                orientation="horizontal"
                phrases={
                  Object {
                    "chooseAvailableEndDate": [Function],
                    "chooseAvailableStartDate": [Function],
                    "clearDates": "Clear Dates",
                    "closeDatePicker": "Close",
                    "dateIsUnavailable": [Function],
                    "enterKey": "Enter key",
                    "escape": "Escape key",
                    "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                    "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                    "homeEnd": "Home and end keys",
                    "jumpToNextMonth": "Move forward to switch to the next month",
                    "jumpToPrevMonth": "Move backward to switch to the previous month",
                    "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                    "keyboardShortcuts": "Keyboard Shortcuts",
                    "leftArrowRightArrow": "Right and left arrow keys",
                    "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                    "moveFocusByOneMonth": "Switch months",
                    "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                    "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                    "openThisPanel": "Open this panel",
                    "pageUpPageDown": "page up and page down keys",
                    "questionMark": "Question mark",
                    "returnFocusToInput": "Return to the date input field",
                    "selectFocusedDate": "Select the date in focus",
                    "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                    "upArrowDownArrow": "up and down arrow keys",
                  }
                }
                readOnly={false}
                renderCalendarInfo={null}
                renderDay={null}
                renderMonth={null}
                reopenPickerOnClearDates={false}
                required={false}
                screenReaderInputMessage=""
                showClearDates={true}
                showDefaultInputIcon={false}
                startDate={"1970-01-01T00:00:00.000Z"}
                startDateId="startDate"
                startDatePlaceholderText="Start Date"
                withFullScreenPortal={false}
                withPortal={false}
              />,
              "className": "input-group__item",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "anchorDirection": "left",
                "customArrowIcon": null,
                "customCloseIcon": null,
                "customInputIcon": null,
                "daySize": 39,
                "disabled": false,
                "displayFormat": [Function],
                "enableOutsideDays": false,
                "endDate": "1970-01-04T00:00:00.000Z",
                "endDateId": "endDate",
                "endDatePlaceholderText": "End Date",
                "firstDayOfWeek": null,
                "focusedInput": null,
                "hideKeyboardShortcutsPanel": false,
                "horizontalMargin": 0,
                "initialVisibleMonth": null,
                "isDayBlocked": [Function],
                "isDayHighlighted": [Function],
                "isOutsideRange": [Function],
                "isRTL": false,
                "keepOpenOnDateSelect": false,
                "minimumNights": 1,
                "monthFormat": "MMMM YYYY",
                "navNext": null,
                "navPrev": null,
                "numberOfMonths": 1,
                "onClose": [Function],
                "onDatesChange": [Function],
                "onFocusChange": [Function],
                "onNextMonthClick": [Function],
                "onPrevMonthClick": [Function],
                "orientation": "horizontal",
                "phrases": Object {
                  "chooseAvailableEndDate": [Function],
                  "chooseAvailableStartDate": [Function],
                  "clearDates": "Clear Dates",
                  "closeDatePicker": "Close",
                  "dateIsUnavailable": [Function],
                  "enterKey": "Enter key",
                  "escape": "Escape key",
                  "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
                  "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
                  "homeEnd": "Home and end keys",
                  "jumpToNextMonth": "Move forward to switch to the next month",
                  "jumpToPrevMonth": "Move backward to switch to the previous month",
                  "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
  select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
                  "keyboardShortcuts": "Keyboard Shortcuts",
                  "leftArrowRightArrow": "Right and left arrow keys",
                  "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
                  "moveFocusByOneMonth": "Switch months",
                  "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
                  "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
                  "openThisPanel": "Open this panel",
                  "pageUpPageDown": "page up and page down keys",
                  "questionMark": "Question mark",
                  "returnFocusToInput": "Return to the date input field",
                  "selectFocusedDate": "Select the date in focus",
                  "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
                  "upArrowDownArrow": "up and down arrow keys",
                },
                "readOnly": false,
                "renderCalendarInfo": null,
                "renderDay": null,
                "renderMonth": null,
                "reopenPickerOnClearDates": false,
                "required": false,
                "screenReaderInputMessage": "",
                "showClearDates": true,
                "showDefaultInputIcon": false,
                "startDate": "1970-01-01T00:00:00.000Z",
                "startDateId": "startDate",
                "startDatePlaceholderText": "Start Date",
                "withFullScreenPortal": false,
                "withPortal": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
